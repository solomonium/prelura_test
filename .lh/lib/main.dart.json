{
    "sourceFile": "lib/main.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1737451217972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1737451385266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,40 +26,38 @@\n \n class _MyAppState extends State<MyApp> {\n   @override\n   Widget build(BuildContext context) {\n-    var themeType = context.select<AppProvider, ThemeType>((val) => val.theme);\n+    // var themeType = context.select<AppProvider, ThemeType>((val) => val.theme);\n \n-    AppTheme theme = AppTheme.fromType(themeType);\n-    return Provider.value(\n-      value: theme,\n-      child: ScreenUtilInit(\n-          designSize: const Size(430, 932),\n-          minTextAdapt: true,\n-          splitScreenMode: true,\n-          builder: (context, child) {\n-            return MaterialApp(\n-              navigatorKey: R.N.navKey,\n-              title: \"Kooha Test\",\n-              theme: ThemeData.dark(),\n-\n-              // theme.themeData,\n-              debugShowCheckedModeBanner: false,\n-              home: const LoginScreen(),\n-              builder: (context, child) => MediaQuery(\n-                data: context.widthPx < 600\n-                    ? context.mq.copyWith(textScaleFactor: .8)\n-                    : context.mq.copyWith(textScaleFactor: 1),\n-                child: InAppNotification(\n-                  key: R.N.notifyKey,\n-                  safeAreaPadding: EdgeInsets.zero,\n-                  minAlertHeight: 40.0,\n-                  child: child,\n-                ),\n-              ),\n-            );\n-          }),\n-    );\n+    // AppTheme theme = AppTheme.fromType(themeType);\n+    return ScreenUtilInit(\n+        designSize: const Size(430, 932),\n+        minTextAdapt: true,\n+        splitScreenMode: true,\n+        builder: (context, child) {\n+          return MaterialApp(\n+            navigatorKey: R.N.navKey,\n+            title: \"Kooha Test\",\n+            theme: ThemeData.dark(),\n+    \n+            // theme.themeData,\n+            debugShowCheckedModeBanner: false,\n+            home: const LoginScreen(),\n+            builder: (context, child) => MediaQuery(\n+              data: context.widthPx < 600\n+                  ? context.mq.copyWith(textScaleFactor: .8)\n+                  : context.mq.copyWith(textScaleFactor: 1),\n+              child:child!,\n+              //  InAppNotification(\n+              //   key: R.N.notifyKey,\n+              //   safeAreaPadding: EdgeInsets.zero,\n+              //   minAlertHeight: 40.0,\n+              //   child: child,\n+              // ),\n+            ),\n+          );\n+        });\n   }\n }\n \n \n"
                },
                {
                    "date": 1737452126405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,9 @@\n import 'package:flutter/material.dart';\n+import 'package:prelura_test/components/mock.dart';\n import 'package:prelura_test/core/provider/home_provider.dart';\n import 'package:prelura_test/export.dart';\n+import 'package:prelura_test/screens/navbar/navbar_details/home.dart';\n \n Future<void> main() async {\n   runApp(\n     MultiProvider(\n@@ -35,26 +37,22 @@\n         minTextAdapt: true,\n         splitScreenMode: true,\n         builder: (context, child) {\n           return MaterialApp(\n-            navigatorKey: R.N.navKey,\n+            navigatorKey: MyRoutes().navKey,\n             title: \"Kooha Test\",\n             theme: ThemeData.dark(),\n \n             // theme.themeData,\n             debugShowCheckedModeBanner: false,\n-            home: const LoginScreen(),\n+            home: const Homescreen(),\n             builder: (context, child) => MediaQuery(\n-              data: context.widthPx < 600\n-                  ? context.mq.copyWith(textScaleFactor: .8)\n-                  : context.mq.copyWith(textScaleFactor: 1),\n+              data: MediaQuery.of(context),\n+              // context.widthPx < 600\n+              //     ? context.mq.copyWith(textScaleFactor: .8)\n+              //     : context.mq.copyWith(textScaleFactor: 1),\n               child: child!,\n-              //  InAppNotification(\n-              //   key: R.N.notifyKey,\n-              //   safeAreaPadding: EdgeInsets.zero,\n-              //   minAlertHeight: 40.0,\n-              //   child: child,\n-              // ),\n+            \n             ),\n           );\n         });\n   }\n"
                },
                {
                    "date": 1737452226770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n         splitScreenMode: true,\n         builder: (context, child) {\n           return MaterialApp(\n             navigatorKey: MyRoutes().navKey,\n-            title: \"Kooha Test\",\n+            title: \"Prelura Test\",\n             theme: ThemeData.dark(),\n \n             // theme.themeData,\n             debugShowCheckedModeBanner: false,\n"
                }
            ],
            "date": 1737451217972,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\nimport 'package:prelura_test/core/provider/home_provider.dart';\nimport 'package:prelura_test/export.dart';\n\nFuture<void> main() async {\n  runApp(\n    MultiProvider(\n      providers: [\n        // ChangeNotifierProvider(create: (_) => AppProvider()),\n        ChangeNotifierProvider(create: (_) => HomeProvider()),\n        // ChangeNotifierProvider(create: (_) => AuthProvider()),\n        // ChangeNotifierProvider(create: (_) => BrowseProvider()),\n        Provider<BuildContext>(create: (c) => c),\n      ],\n      child: const MyApp(),\n    ),\n  );\n}\n\nclass MyApp extends StatefulWidget {\n  const MyApp({Key? key}) : super(key: key);\n\n  @override\n  State<MyApp> createState() => _MyAppState();\n}\n\nclass _MyAppState extends State<MyApp> {\n  @override\n  Widget build(BuildContext context) {\n    var themeType = context.select<AppProvider, ThemeType>((val) => val.theme);\n\n    AppTheme theme = AppTheme.fromType(themeType);\n    return Provider.value(\n      value: theme,\n      child: ScreenUtilInit(\n          designSize: const Size(430, 932),\n          minTextAdapt: true,\n          splitScreenMode: true,\n          builder: (context, child) {\n            return MaterialApp(\n              navigatorKey: R.N.navKey,\n              title: \"Kooha Test\",\n              theme: ThemeData.dark(),\n\n              // theme.themeData,\n              debugShowCheckedModeBanner: false,\n              home: const LoginScreen(),\n              builder: (context, child) => MediaQuery(\n                data: context.widthPx < 600\n                    ? context.mq.copyWith(textScaleFactor: .8)\n                    : context.mq.copyWith(textScaleFactor: 1),\n                child: InAppNotification(\n                  key: R.N.notifyKey,\n                  safeAreaPadding: EdgeInsets.zero,\n                  minAlertHeight: 40.0,\n                  child: child,\n                ),\n              ),\n            );\n          }),\n    );\n  }\n}\n\n\n\n// import 'package:flutter/material.dart';\n\n// void main() {\n//   runApp(const MyApp());\n// }\n\n// class MyApp extends StatelessWidget {\n//   const MyApp({super.key});\n\n//   // This widget is the root of your application.\n//   @override\n//   Widget build(BuildContext context) {\n//     return MaterialApp(\n//       title: 'Flutter Demo',\n//       theme: ThemeData(\n//         // This is the theme of your application.\n//         //\n//         // TRY THIS: Try running your application with \"flutter run\". You'll see\n//         // the application has a purple toolbar. Then, without quitting the app,\n//         // try changing the seedColor in the colorScheme below to Colors.green\n//         // and then invoke \"hot reload\" (save your changes or press the \"hot\n//         // reload\" button in a Flutter-supported IDE, or press \"r\" if you used\n//         // the command line to start the app).\n//         //\n//         // Notice that the counter didn't reset back to zero; the application\n//         // state is not lost during the reload. To reset the state, use hot\n//         // restart instead.\n//         //\n//         // This works for code too, not just values: Most code changes can be\n//         // tested with just a hot reload.\n//         colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),\n//         useMaterial3: true,\n//       ),\n//       home: const MyHomePage(title: 'Flutter Demo Home Page'),\n//     );\n//   }\n// }\n\n// class MyHomePage extends StatefulWidget {\n//   const MyHomePage({super.key, required this.title});\n\n//   // This widget is the home page of your application. It is stateful, meaning\n//   // that it has a State object (defined below) that contains fields that affect\n//   // how it looks.\n\n//   // This class is the configuration for the state. It holds the values (in this\n//   // case the title) provided by the parent (in this case the App widget) and\n//   // used by the build method of the State. Fields in a Widget subclass are\n//   // always marked \"final\".\n\n//   final String title;\n\n//   @override\n//   State<MyHomePage> createState() => _MyHomePageState();\n// }\n\n// class _MyHomePageState extends State<MyHomePage> {\n//   int _counter = 0;\n\n//   void _incrementCounter() {\n//     setState(() {\n//       // This call to setState tells the Flutter framework that something has\n//       // changed in this State, which causes it to rerun the build method below\n//       // so that the display can reflect the updated values. If we changed\n//       // _counter without calling setState(), then the build method would not be\n//       // called again, and so nothing would appear to happen.\n//       _counter++;\n//     });\n//   }\n\n//   @override\n//   Widget build(BuildContext context) {\n//     // This method is rerun every time setState is called, for instance as done\n//     // by the _incrementCounter method above.\n//     //\n//     // The Flutter framework has been optimized to make rerunning build methods\n//     // fast, so that you can just rebuild anything that needs updating rather\n//     // than having to individually change instances of widgets.\n//     return Scaffold(\n//       appBar: AppBar(\n//         // TRY THIS: Try changing the color here to a specific color (to\n//         // Colors.amber, perhaps?) and trigger a hot reload to see the AppBar\n//         // change color while the other colors stay the same.\n//         backgroundColor: Theme.of(context).colorScheme.inversePrimary,\n//         // Here we take the value from the MyHomePage object that was created by\n//         // the App.build method, and use it to set our appbar title.\n//         title: Text(widget.title),\n//       ),\n//       body: Center(\n//         // Center is a layout widget. It takes a single child and positions it\n//         // in the middle of the parent.\n//         child: Column(\n//           // Column is also a layout widget. It takes a list of children and\n//           // arranges them vertically. By default, it sizes itself to fit its\n//           // children horizontally, and tries to be as tall as its parent.\n//           //\n//           // Column has various properties to control how it sizes itself and\n//           // how it positions its children. Here we use mainAxisAlignment to\n//           // center the children vertically; the main axis here is the vertical\n//           // axis because Columns are vertical (the cross axis would be\n//           // horizontal).\n//           //\n//           // TRY THIS: Invoke \"debug painting\" (choose the \"Toggle Debug Paint\"\n//           // action in the IDE, or press \"p\" in the console), to see the\n//           // wireframe for each widget.\n//           mainAxisAlignment: MainAxisAlignment.center,\n//           children: <Widget>[\n//             const Text(\n//               'You have pushed the button this many times:',\n//             ),\n//             Text(\n//               '$_counter',\n//               style: Theme.of(context).textTheme.headlineMedium,\n//             ),\n//           ],\n//         ),\n//       ),\n//       floatingActionButton: FloatingActionButton(\n//         onPressed: _incrementCounter,\n//         tooltip: 'Increment',\n//         child: const Icon(Icons.add),\n//       ), // This trailing comma makes auto-formatting nicer for build methods.\n//     );\n//   }\n// }\n"
        }
    ]
}